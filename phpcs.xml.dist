<?xml version="1.0"?>
<ruleset name="CP Plugin and Themes Coding Standards">

	<description>
		A custom set of rules to use when validating and reviewing CP Plugins or Themes. This is NOT for CP Core.
	</description>

	<!-- start config -->

	<!-- style the error output a little so it is easier to spot warning/errors-->
	<arg name="colors"/>

	<!-- only sniff PHP-->
	<arg name="extensions" value="php" />

	<!-- check for minimum WP version required -->
	<config name="minimum_supported_wp_version" value="1.0.0"/>

	<!-- The Custom Text Domain of this Plugin or Theme -->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="prismatic"/>
			</property>
		</properties>
	</rule>

	<!-- Exclude managed libraries -->
	<exclude-pattern>/vendor/</exclude-pattern>

	<!-- PHP Version Test. Uncomment to use. Install with https://github.com/PHPCompatibility/PHPCompatibility#installation-via-a-git-check-out-to-an-arbitrary-directory-method-2. -->
	<!-- <config name="testVersion" value="5.2-"/>
	<rule ref="PHPCompatibility">
		<include-pattern>*\.php$</include-pattern>
	</rule> -->

	<!-- end config -->

	<!-- You should probably not edit anything below this line unless it has been discussed with the community -->

	<!-- start rules -->

	<!-- We use WordPress ruleset by default which should include everything -->
	<rule ref="WordPress">

		<!-- Remove WP rules in Bulk -->
		<exclude name="WordPress.Arrays"/>
		<exclude name="WordPress.Files.FileName"/>
		<exclude name="WordPress.NamingConventions"/>
		<exclude name="WordPress.WhiteSpace"/>

		<!-- Remove WP Specific rules. -->
		<exclude name="WordPress.Classes.ClassInstantiation.MissingParenthesis"/>
		<exclude name="WordPress.CodeAnalysis.AssignmentInCondition.Found"/>
		<exclude name="WordPress.DB.DirectDatabaseQuery.DirectQuery"/>
		<exclude name="WordPress.DB.DirectDatabaseQuery.NoCaching"/>
		<exclude name="WordPress.PHP.DisallowShortTernary.Found"/>
		<exclude name="WordPress.PHP.StrictComparisons.LooseComparison"/>
		<exclude name="WordPress.PHP.StrictInArray.MissingTrueStrict"/>
		<exclude name="WordPress.PHP.YodaConditions.NotYoda"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents"/>
		<exclude name="WordPress.WP.EnqueuedResourceParameters.MissingVersion"/>
		<exclude name="WordPress.WP.EnqueuedResourceParameters.NoExplicitVersion"/>
		<exclude name="WordPress.WP.EnqueuedResourceParameters.NotInFooter"/>

		<!-- Remove Squiz rules in Bulk -->
		<exclude name="Squiz.Commenting"/>
		<exclude name="Squiz.ControlStructures"/>
		<exclude name="Squiz.NamingConventions"/>
		<exclude name="Squiz.WhiteSpace"/>

		<!-- Remove Squiz Specific rules -->
		<exclude name="Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket"/>
		<exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterEquals"/>
		<exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals"/>
		<exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen"/>
		<exclude name="Squiz.Operators.IncrementDecrementUsage.Found"/>
		<exclude name="Squiz.Operators.ValidLogicalOperators.NotAllowed"/>
		<exclude name="Squiz.PHP.CommentedOutCode.Found"/>
		<exclude name="Squiz.PHP.DisallowMultipleAssignments.Found"/>
		<exclude name="Squiz.PHP.DisallowMultipleAssignments.FoundInControlStructure"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.ContentAfterEnd"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.ContentAfterOpen"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.ContentBeforeEnd"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.ContentBeforeOpen"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.MultipleStatements"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.NoSemicolon"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.SpacingBeforeClose"/>
		<exclude name="Squiz.Scope.MethodScope.Missing"/>
		<exclude name="Squiz.Strings.ConcatenationSpacing.PaddingFound"/>
		<exclude name="Squiz.Strings.DoubleQuoteUsage.NotRequired"/>

		<!-- Remove PEAR rules in Bulk -->
		<exclude name="PEAR.Commenting"/>
		<exclude name="PEAR.Functions.FunctionCallSignature"/>
		<exclude name="PEAR.NamingConventions"/>

		<!-- Remove PEAR Specific rules -->
		<exclude name="PEAR.Files.IncludingFile.BracketsNotRequired"/>
		<exclude name="PEAR.Files.IncludingFile.UseRequire"/>

		<!-- Remove PSR2 rules in Bulk -->
		<exclude name="PSR2.ControlStructures"/>
		<exclude name="PSR2.Namespaces"/>
		<exclude name="PSR2.Classes.PropertyDeclaration"/>

		<!-- Remove PSR2 Specific rules -->
		<exclude name="PSR2.Files.ClosingTag.NotAllowed"/>
		<exclude name="PSR2.Classes.PropertyDeclaration.Underscore"/>
		<exclude name="PSR2.Methods.MethodDeclaration.Underscore"/>

		<!-- Remove Generic rules in Bulk -->
		<exclude name="Generic.Classes"/>
		<exclude name="Generic.Commenting"/>
		<exclude name="Generic.Files"/>
		<exclude name="Generic.Formatting"/>
		<exclude name="Generic.Functions"/>
		<exclude name="Generic.WhiteSpace"/>

		<!-- Remove Generic Specific rules -->
		<exclude name="Generic.Arrays.DisallowShortArraySyntax.Found"/>
		<exclude name="Generic.ControlStructures.InlineControlStructure.NotAllowed"/>
		<exclude name="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma"/>
		<exclude name="Generic.PHP.ClosingPHPTag.NotFound"/>
		<exclude name="Generic.PHP.LowerCaseKeyword.Found"/>
		<exclude name="Generic.PHP.RequireStrictTypes.MissingDeclaration"/>
		<exclude name="Generic.Strings.UnnecessaryStringConcat"/>

	</rule>

	<!-- Do not check for translator comments when placeholder is included -->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="check_translator_comments" value="false"/>
		</properties>
	</rule>

	<!-- Do Detect error silencing, so no one can cheat -->
	<rule ref="WordPress.PHP.NoSilencedErrors">
		<properties>
			<property name="context_length" value="100"/>
			<property name="use_default_whitelist" value="false"/>
		</properties>
	</rule>

	<!-- end rules -->

</ruleset>